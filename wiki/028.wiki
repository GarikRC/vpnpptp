#summary Возможности версии 0.2.8

В версии vpnpptp 0.2.8 реализовано:

1) в провайдерский файл настроек /etc/ppp/peers/имя_соединения добавлена строчка unit X, а в скрипты /etc/ppp/ip-up.d/ip-up, /etc/ppp/ip-down.d/ip-down добавлены строки (в начало):
 if [ ! $PPP_IFACE = "pppX" ] #if [ ! $IFNAME = "pppX" ]
 then
     exit 0
 fi
и таким образом скрипты поднятия и опускания стали привязаны к X, и они не будут выполняться для других соединений,

2) добавлением дополнительного параметра unit X и его обработки скриптами проект стал еще более автономным от системы, но и были заложены основы профилей подключений, то есть теоретически в /etc/ppp/peers/ можно хранить сколько угодно различных имен соединений (модулей, профилей подключений), и для каждого из этих профилей подключений могут выполняться различные скрипты поднятия и опускания, причем все эти скрипты для различных профилей подключений можно смело хранить в /etc/ppp/ip-up.d/ и в /etc/ppp/ip-down.d/ - из них выполнятся лишь те, которые соответствуют номеру модуля; если использовать интерфейсы pppX, где X будет выбираться из числа неиспользуемых в дистрибутиве, то каждый профиль подключения будет запускаться автономно, то есть если исключить X=0, то для ppp0 наши скрипты поднятия и опускания не будут выполняться; проще говоря программа не использует интерфейс ppp0, а начинает использовать ppp1 или выше и таким образом, например, Network-Manager работает с ppp0, а скрипты поднятия и опускания не будут выполняться для ppp0 (для dslN логично тоже самое).

3) добавлены дистрибутивы: Russian Fedora, Rosa,

4) для всех дистрибутивов сделана одинаковая работа с usepeerdns, с DNS при поднятом VPN: файл /var/run/ppp/resolv.conf более не используется, используется только файл /opt/vpnpptp/resolv.conf.after; конфигуратор vpnpptp теперь всегда при любых условиях создает файл /opt/vpnpptp/resolv.conf.after и заполняет его DNS1, DNS2 и др. при поднятом VPN, указанными в конфигураторе; после этого в скрипте /etc/ppp/ip-up.d/ip-up проверяется используется ли опция usepeerdns; если опция usepeerdns используется, и VPN-сервер предоставил свои DNS, то файл /opt/vpnpptp/resolv.conf.after изменяется этим скриптом (если не предоставил, то не изменяется); если опция usepeerdns выбрана не была, то файл /opt/vpnpptp/resolv.conf.after не изменяется этим скриптом; затем скрипт /etc/ppp/ip-up.d/ip-up копирует файл /opt/vpnpptp/resolv.conf.after в /etc/resolv.conf; таким образом этот механизм работает даже без графики, не пересекается с системным механизмом, так как действует п. 1, наиболее полно учитывает поступающие в скрипты директории /etc/ppp/ переменные $DNS1, $DNS2, $USEPEERDNS, которые во всех поддерживаемых дистрибутивах одинаковые,

5) файл /etc/resolv.conf.lock более не создается, вместо этого скрипт /etc/ppp/ip-down.d/ip-down копирует файл /opt/vpnpptp/resolv.conf.before в файл /etc/resolv.conf, приведя то, что уже было сделано ранее для графики, одинаково для работы без графики,

6) отменена поддержка тех, кто пользовался скриптами от mr.Peabody, так как сам автор их больше не поддерживает,

7) в конфигураторе внесены поправки на определение шлюза локальной сети при отсутствии дефолтного шлюза и на ручное изменение определенного автоматически шлюза локальной сети - он становится дефолным,

8) внесены поправки в модуль ponoff на подсчет трафика и времени в сети даже если скрипт /etc/ppp/ip-down.d/ip-down не выполняется.

Примечания:

В этой версии программы я постарался свести все дистрибутивы к общему знаменателю во всем, чтобы в коде для них было как можно меньше отличий, проведя ревизию кода. Впервые зачатки такой работы с DNS при поднятом VPN были использованы только для openSUSE, но именно они оказались наиболее простыми и универсальными для всех поддерживаемых дистрибутивов. Профили подключений возможны, но еще не реализованы. То, что файл /var/run/ppp/resolv.conf более не используется, позволяет сделать программу энергонезависимой. Число аналогичных дистрибутивов, в которых программа будет работать в связи с внесенными поправками возрастет, так как уже неважно как в том или ином дистрибутиве реализована работа с DNS при поднятом VPN, и неважно есть ли в дистрибутиве свои методы настройки VPN, так как программа более с ними практически не пересекается.
