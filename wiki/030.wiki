#summary Возможности версии 0.3.0

В версии vpnpptp 0.3.0 реализовано:

1) если выбрано шифрование mppe, то если man pppd неполный или отсутствует, то конфигуратором выводится информационное предупреждение,

2) автоматизирована сборка rpm-пакетов и deb-пакетов для различных архитектур, помещение пакетов в репозитории Russian Fedora, Mandriva,

3) исправлен вызов конфигуратора vpnpptp из Центра Управления Mandriva - поломал в предыдущей версии,

4) улучшения в модуле ponoff, половина кода переписана: значительное уменьшение необходимости обращения к жесткому диску путем перехода от shell к popen,

5) исправлен ранее работавший запрет двойного запуска конфигуратора vpnpptp - поломал в предыдущих версиях,

6) рассмотрен вариант запуска под root и не под root одновременно,

7) модуль ponoff более не влияет на vnstat, модуль ponoff более не порождает зомби-процессы dhclient, net_monitor, исправлен расчет скорости загруженного/отданного, также исправлены другие ошибки,

8) переписана работа справки в конфигураторе, офисное приложение ищется:
 for i in {,/usr,/usr/local}{/bin,/lib} /opt /home;  do   find  $i  -name oowriter -type f 2>/dev/null; done;
 for i in {,/usr,/usr/local}{/bin,/lib} /opt /home;  do   find  $i  -name soffice -type f 2>/dev/null; done;
и берется последнее из найденных с приоритетом для oowriter, а если ничего не найдено, то выводится сообщение,

9) для dhclient дается время тактом из расчета: время дозвона, разделенное нацело на 3, но не более 2-х тактов (то есть получение маршрутов через DHCP занимает либо 1/3 времени дозвона, либо 2/3 времени дозвона, а на поднятие туннеля, если выбрано получение маршрутов через DHCP, остается соответственно либо 2/3 времени дозвона, либо 1/3 времени дозвона),

10) улучшения в модуле ponoff позволили снять ряд ограничений на время дозвона,

11) возвращен выход при аварии из предыдущей версии программы, так как ускоренный такой выход показал свою непригодность,

12) минимальное MTU для VPN L2TP принято 1460 байт, вместо ранее принятых 1400 байт,

13) конфигуратор vpnpptp теперь работает даже в том случае если кроме его исполняемого файла вообще ничего нет; модуль ponoff откажется работать если не найдет одного из файлов: /var/lib/vpnpptp/имясоединения/resolv.conf.before, /var/lib/vpnpptp/имясоединения/resolv.conf.after,

14) для модуля ponoff предусмотрена дефолтная черно-белая иконка, которая встроена в исполняемый файл и которая используется, если не найдены /usr/share/vpnpptp/off.ico или /usr/share/vpnpptp/on.ico, отсутствие которых считается теперь нормальным явлением,

15) отказ от записи в провайдерский файл настроек /etc/ppp/peers/имясоединения параметра unit и отказ от принятого ранее различения соединений по номеру получившегося сетевого интерфейса pppN; теперь сетевые интерфейсы как и ранее начинаются с ppp0, а различаются соединения в скриптах поднятия и опускания по параметру linkname, указанному в провайдерском файле настроек /etc/ppp/peers/имясоединения, значение которого равно имени соединения, также в скриптах поднятия и опускания теперь используется переменная $LINKNAME, то есть каждое соединение имеет имя,

16) конфигуратор создает дефолтное соединение /var/lib/vpnpptp/default/default, которое по сути является простым файлом с информацией какое из имеющихся соединений использовать в качестве дефолтного; самое первое настроенное соединение автоматически становится дефолным, а новое настраиваемое соединение конфигуратор предлагает сделать дефолтным, если оно еще таковым не является и есть иное дефолтное соединение; дефолтное соединение используется модулем ponoff в случае его запуска без параметров; модуль ponoff умеет, если нет дефолтного соединения, но есть хотя бы одно недефолтное, то при старте спросить пользователя выпадающим списком соединений как поступить, и с согласия пользователя любое имеющееся недефолтное соединение модуль ponoff сделает дефолтным,

17) модуль ponoff запускается теперь либо без параметров, либо в качестве первого параметра ему передается имя соединения, а конфигуратор vpnpptp создает на Рабочем столе ярлыки для различных соединений при условии, что для конкретного имени соединения создание ярлыков предусмотрено его конфигом, аналогично и с конфигуратором - его запуск без параметров означает создание нового соединения если еще не было настроено ни одного соединения, а если было настроено уже хотя бы одно соединение, то конфигуратор предлагает выпадающий список таких соединений и возможность создания нового соединения, его запуск с параметрами позволяет изменить или удалить соединение, или создать соединение с именем-параметром, если оно еще не создано, также на Рабочем столе создаются ярлыки настройки для каждого соединения для их настройки,

18) в каталоге /var/lib/vpnpptp/ создаются подкаталоги с именем соединения, а скрипты поднятия и опускания теперь имеют префикс имени соединения, например, /etc/ppp/ip-up.d/beeline-ip-up, /etc/ppp/ip-down.d/beeline-ip-down, но конфигуратор не пишет больше скрипт опускания /etc/ppp/ip-down.d/beeline-ip-down; конфигуратор создает директорию /etc/ppp/ip-down.l/, в которую пишет прежний скрипт опускания, например, /etc/ppp/ip-down.l/beeline-ip-down, а скрипт опускания /etc/ppp/ip-down.d/beeline-ip-down пишется скриптом поднятия /etc/ppp/ip-up.d/beeline-ip-up,

19) разрешен как и прежде повторный запуск ponoff, но теперь лишь это разрешение распространяется на повторный запуск идентичного соединения по имени соединения, не удастся запустить 2 разных соединения одновременно, в целях чего используется директория /var/run/vpnpptp/, в которой учитывается работающее соединение,

20) улучшенное управление скриптом опускания позволило отказаться в модуле ponoff от изменения местоположения скрипта(ов) опускания,

21) отказ от команды echo "d имясоединения" > /var/run/xl2tpd/l2tp-control, так как при этом не выполняется самостоятельно скрипт опускания, эта команда заменена на killall pppd для VPN L2TP, при которой скрипт опускания выполняется самостоятельно, а эффект такой же - соединение VPN L2TP опускается и не мешает соединению с другим именем поднять соединение VPN L2TP,

23) в директории соединений /var/lib/vpnpptp/имясоединения для VPN L2TP добавлены файлы xl2tpd.conf.lac, содержащие секцию LAC этого соединения,

24) ведется файл /var/lib/vpnpptp/profiles, содержащий имена всех имен соединений,

25) в конфигураторе vpnpptp добавлена кнопка, позволяющае удалить соединение, она активна лишь если активное соединение можно удалить,

26) в конфигураторе вынесены отдельно настройки, общие для всех соединений; при изменении этих настроек изменяются конфиги сразу всех соединений, а для нового создаваемого соединения эти общие для всех соединений настройки читаются сразу из всех конфигов соединений (они в этот момент там одинаковые для всех) - такой подход позволяет не изменять структуру файла config,

27) для Fedora конфигуратор создает скрипт /etc/ppp/ip-up.local следующего содержания:
 #!/bin/sh
 if [ -d /etc/ppp/ip-up.d/ -a -x /usr/bin/run-parts ]; then   
     /usr/bin/run-parts /etc/ppp/ip-up.d/
 fi
и скрипт /etc/ppp/ip-down.local следующего содержания: 
 #!/bin/sh
 if [ -d /etc/ppp/ip-down.d/ -a -x /usr/bin/run-parts ]; then   
     /usr/bin/run-parts /etc/ppp/ip-down.d/
 fi

Примечания:

Libreoffice тоже теперь имеет возможность работать со справкой.

В случае выбора опции получения маршрутов через DHCP если dhclient не уложился даже во время дозвона в окончании 3-го такта, то ponoff будет дожидаться завершения работы dhclient'а, увеличив время 3-го такта до фактического завершения работы dhclient'а.

Если получение маршрутов через DHCP не выбрано, то такт всего один, и он равен времени дозвона - в этом первом такте устанавливается туннель. Если получение маршрутов через DHCP выбрано, то туннель устанавливается либо во-втором, либо в третьем такте.

Для того, чтобы модуль ponoff работал с черно-белой иконкой, необходимо удалить (переименовать) один из файлов /usr/share/vpnpptp/off.ico или /usr/share/vpnpptp/on.ico, либо собрать пакет без файлов on.ico, off.ico - это может быть полезно в черно-белых темах оформления как в Ubuntu, но у такой иконки всегда одно состояние, и различить есть соединение или нет соединения можно будет по всплывающему хинту при наведении мышкой на иконку в трее. Соответственно индикация становится цветной при наличии одновременно /usr/share/vpnpptp/on.ico и /usr/share/vpnpptp/off.ico.

В пункте 20 изложен механизм, по которому скрипт опускания теперь фактически состоит из двух частей - одна часть пишется конфигуратором vpnpptp и модулем ponoff, а другая его часть пишется только исключительно скриптом поднятия. В скрипт поднятия поступают переменные, которые экспортируются так, чтобы они всегда поступали в скрипт опускания, и этот экспорт происходит через файл-скрипт /etc/ppp/ip-down.d/имясоединения-ip-down, из которого потом после экспорта фактически вызывается скрипт опускания /etc/ppp/ip-down.l/имясоединения-ip-down. Такой подход позволяет в неизменном виде передать по назначению все переменные и важную переменную $LINKNAME, без которой различение имен соединений было бы невозможно. В скрипт /etc/ppp/ip-up.d/имясоединения-ip-up в конец добавлено:

 echo "#!bin/sh" > /etc/ppp/ip-down.d/$LINKNAME-ip-down
 export >> /etc/ppp/ip-down.d/$LINKNAME-ip-down
 echo "/etc/ppp/ip-down.l/$LINKNAME-ip-down" >> /etc/ppp/ip-down.d/$LINKNAME-ip-down
 chmod +x /etc/ppp/ip-down.d/$LINKNAME-ip-down

Файл-конфиг /etc/xl2tpd/xl2tpd.conf создается на основе данных из /var/lib/vpnpptp/profiles, из которого читаются имена соединений и формируется единый файл-конфиг /etc/xl2tpd/xl2tpd.conf из xl2tpd.conf.lac, взятых в каждой директории соединения.

Если настроено и используется всего одно соединение, то дополнительный функционал работы программы с множественными соединениями будет незаметен для пользователя. Общее число соединений ничем не ограничено.

Уделено огромное внимание, чтобы созданные конфигуратором vpnpptp соединения работали без иксов.
